<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="3" hostname="ESTPL-DLF-L188" failures="0" tests="3" name="Test" time="20.347" errors="0" timestamp="2024-04-02T14:54:35 IST">
  <testcase classname="com.RND.base.BaseTestRealDevice" name="@BeforeClass configureAppium" time="20.322">
    <failure type="io.appium.java_client.service.local.AppiumServerHasNotBeenStartedLocallyException" message="Appium HTTP server is not listening at http://127.0.0.1:4723/ after 20000 ms timeout. Consider increasing the server startup timeout value and check the server log for possible error messages occurrences.
Node.js executable path: C:\Program Files\nodejs\node.exe
Arguments: [C:\Users\prashanta.behera\AppData\Roaming\npm\node_modules\appium\build\lib\main.js, --port, 4723, --address, 127.0.0.1]
Server log: [35m[Appium][39m Welcome to Appium v2.5.1
[35m[Appium][39m Non-default server args:
[35m[Appium][39m { address: [32m&amp;apos;127.0.0.1&amp;apos;[39m }
[35m[Appium][39m The autodetected Appium home path: C:\Users\prashanta.behera\.appium
[35m[Appium][39m Attempting to load driver uiautomator2...
[35m[Appium][39m Requiring driver at C:\Users\prashanta.behera\.appium\node_modules\appium-uiautomator2-driver\build\index.js
[35m[Appium][39m AndroidUiautomator2Driver has been successfully loaded in 0.684s
[38;5;0m[HTTP][0m Could not start REST http interface listener. The requested port may already be in use. Please make sure there is no other instance of this server running already.
[35m[Appium][39m Could not configure Appium server. It&amp;apos;s possible that a driver or plugin tried to update the server and failed. Original error: listen EADDRINUSE: address already in use 127.0.0.1:4723
[35m[Appium][39m Error: listen EADDRINUSE: address already in use 127.0.0.1:4723
[35m[Appium][39m     at Server.setupListenHandle [as _listen2] (node:net:1893:16)
[35m[Appium][39m     at listenInCluster (node:net:1941:12)
[35m[Appium][39m     at doListen (node:net:2096:7)
[35m[Appium][39m     at processTicksAndRejections (node:internal/process/task_queues:83:21)
">
      <![CDATA[io.appium.java_client.service.local.AppiumServerHasNotBeenStartedLocallyException: Appium HTTP server is not listening at http://127.0.0.1:4723/ after 20000 ms timeout. Consider increasing the server startup timeout value and check the server log for possible error messages occurrences.
Node.js executable path: C:\Program Files\nodejs\node.exe
Arguments: [C:\Users\prashanta.behera\AppData\Roaming\npm\node_modules\appium\build\lib\main.js, --port, 4723, --address, 127.0.0.1]
Server log: [35m[Appium][39m Welcome to Appium v2.5.1
[35m[Appium][39m Non-default server args:
[35m[Appium][39m { address: [32m'127.0.0.1'[39m }
[35m[Appium][39m The autodetected Appium home path: C:\Users\prashanta.behera\.appium
[35m[Appium][39m Attempting to load driver uiautomator2...
[35m[Appium][39m Requiring driver at C:\Users\prashanta.behera\.appium\node_modules\appium-uiautomator2-driver\build\index.js
[35m[Appium][39m AndroidUiautomator2Driver has been successfully loaded in 0.684s
[38;5;0m[HTTP][0m Could not start REST http interface listener. The requested port may already be in use. Please make sure there is no other instance of this server running already.
[35m[Appium][39m Could not configure Appium server. It's possible that a driver or plugin tried to update the server and failed. Original error: listen EADDRINUSE: address already in use 127.0.0.1:4723
[35m[Appium][39m Error: listen EADDRINUSE: address already in use 127.0.0.1:4723
[35m[Appium][39m     at Server.setupListenHandle [as _listen2] (node:net:1893:16)
[35m[Appium][39m     at listenInCluster (node:net:1941:12)
[35m[Appium][39m     at doListen (node:net:2096:7)
[35m[Appium][39m     at processTicksAndRejections (node:internal/process/task_queues:83:21)

at io.appium.java_client.service.local.AppiumDriverLocalService.start(AppiumDriverLocalService.java:193)
at com.RND.base.BaseTestRealDevice.configureAppium(BaseTestRealDevice.java:66)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: io.appium.java_client.service.local.AppiumServerAvailabilityChecker$ConnectionTimeout: ConnectionTimeout
at io.appium.java_client.service.local.AppiumServerAvailabilityChecker.waitUntilAvailable(AppiumServerAvailabilityChecker.java:72)
at io.appium.java_client.service.local.AppiumDriverLocalService.ping(AppiumDriverLocalService.java:145)
at io.appium.java_client.service.local.AppiumDriverLocalService.start(AppiumDriverLocalService.java:186)
... 14 more
Caused by: java.net.ConnectException: Connection refused: no further information
at java.base/sun.nio.ch.Net.pollConnect(Native Method)
at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
at java.base/java.net.Socket.connect(Socket.java:633)
at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:178)
at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:534)
at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:639)
at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:282)
at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:387)
at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:409)
at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1309)
at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1242)
at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1128)
at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1057)
at io.appium.java_client.service.local.AppiumServerAvailabilityChecker.connectToUrl(AppiumServerAvailabilityChecker.java:79)
at io.appium.java_client.service.local.AppiumServerAvailabilityChecker.waitUntilAvailable(AppiumServerAvailabilityChecker.java:61)
... 16 more
]]>
    </failure>
  </testcase> <!-- @BeforeClass configureAppium -->
  <testcase classname="com.RND.base.BaseTestRealDevice" name="@BeforeMethod setup" time="-1.71204987506E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.RND.base.BaseTestRealDevice" name="@BeforeMethod setup" time="-1.71204987506E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.RND.base.BaseTestRealDevice" name="@BeforeMethod setup" time="-1.71204987506E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.RND.tests.RND_Test" name="@AfterMethod tearDown" time="-1.712049875063E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.RND.tests.RND_Test" name="@AfterMethod tearDown" time="-1.712049875063E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.RND.tests.RND_Test" name="@AfterMethod tearDown" time="-1.712049875063E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.RND.base.BaseTestRealDevice" name="@AfterTest serviceClose" time="-1.712049875064E9">
    <skipped/>
  </testcase> <!-- @AfterTest serviceClose -->
  <testcase classname="com.RND.tests.RND_Test" name="TC_02_verificationOfLoginFunctionalityWithOTP" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02_verificationOfLoginFunctionalityWithOTP -->
  <testcase classname="com.RND.tests.RND_Test" name="TC_01_verificationOfLoginFunctionalityMobileNumber" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01_verificationOfLoginFunctionalityMobileNumber -->
  <testcase classname="com.RND.tests.RND_Test" name="TC_03_VerificationOfChangeMultiSectorFunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- TC_03_VerificationOfChangeMultiSectorFunctionality -->
  <testcase classname="com.RND.tests.RND_Test" name="TC_06_verificationOfAddNewBeneficiaryAadhar" time="0.0">
    <ignored/>
  </testcase> <!-- TC_06_verificationOfAddNewBeneficiaryAadhar -->
  <testcase classname="com.RND.tests.RND_Test" name="TC_04_VerificationOfSupervisorHomePage" time="0.0">
    <ignored/>
  </testcase> <!-- TC_04_VerificationOfSupervisorHomePage -->
  <testcase classname="com.RND.tests.RND_Test" name="TC_05_verificationOfAddNewBeneficiary" time="0.0">
    <ignored/>
  </testcase> <!-- TC_05_verificationOfAddNewBeneficiary -->
</testsuite> <!-- Test -->
